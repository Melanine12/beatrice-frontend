// Script de test pour v√©rifier la configuration de l'API
// Ex√©cuter avec: node test-api-config.js

const API_CONFIG = {
  // D√©veloppement local
  development: {
    baseURL: 'http://localhost:5002/api',
    socketURL: 'http://localhost:5002',
    timeout: 10000
  },
  
  // Production (Render)
  production: {
    baseURL: 'https://beatrice-backend.onrender.com/api',
    socketURL: 'https://beatrice-backend.onrender.com',
    timeout: 15000
  }
};

// Forcer le mode d√©veloppement
const isDevelopment = true;
const activeConfig = isDevelopment ? API_CONFIG.development : API_CONFIG.production;

console.log('üîß Test de configuration API');
console.log('============================');
console.log(`Environnement: ${isDevelopment ? 'DEVELOPPEMENT' : 'PRODUCTION'}`);
console.log(`Base URL: ${activeConfig.baseURL}`);
console.log(`Socket URL: ${activeConfig.socketURL}`);
console.log(`Timeout: ${activeConfig.timeout}ms`);
console.log('');

// Test de connectivit√©
const testConnectivity = async () => {
  try {
    console.log('üß™ Test de connectivit√©...');
    
    // Test avec fetch (si disponible)
    if (typeof fetch !== 'undefined') {
      const response = await fetch(`${activeConfig.baseURL}/auth/me`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      });
      
      if (response.ok) {
        console.log('‚úÖ API accessible');
      } else {
        console.log(`‚ö†Ô∏è API accessible mais erreur: ${response.status}`);
      }
    } else {
      console.log('‚ÑπÔ∏è Fetch non disponible, test avec curl recommand√©');
    }
    
  } catch (error) {
    console.log('‚ùå Erreur de connectivit√©:', error.message);
    console.log('');
    console.log('üí° Solutions possibles:');
    console.log('1. V√©rifier que le backend est d√©marr√© sur le port 5002');
    console.log('2. V√©rifier que http://localhost:5002 est accessible');
    console.log('3. V√©rifier les logs du backend');
  }
};

// Ex√©cuter le test si le script est lanc√© directement
if (require.main === module) {
  testConnectivity();
}

module.exports = { API_CONFIG, activeConfig, isDevelopment };
